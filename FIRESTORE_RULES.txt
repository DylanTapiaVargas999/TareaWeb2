═══════════════════════════════════════════════════════════════
INSTRUCCIONES: CONFIGURAR REGLAS DE FIRESTORE
═══════════════════════════════════════════════════════════════

PROBLEMA DETECTADO:
- El error al enviar solicitudes probablemente se debe a reglas de 
  seguridad restrictivas en Firestore.

═══════════════════════════════════════════════════════════════
SOLUCIÓN: CONFIGURAR REGLAS EN FIREBASE CONSOLE
═══════════════════════════════════════════════════════════════

1. Ve a: https://console.firebase.google.com/
2. Selecciona tu proyecto: "tareaweb2-59553"
3. En el menú lateral, ve a "Firestore Database"
4. Click en la pestaña "Reglas" (Rules)
5. Reemplaza las reglas actuales con estas:

───────────────────────────────────────────────────────────────
REGLAS PARA DESARROLLO (ROL-BASED):
───────────────────────────────────────────────────────────────

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper: comprobar si el usuario autenticado tiene rol 'admin'
    // Esta implementación comprueba el documento en la colección
    // 'administradores/{uid}' y revisa el campo 'rol'.
    // Alternativa (más segura): usar custom claims en el token de Auth
    // y comprobar `request.auth.token.role == 'admin'`.
    function isAdmin() {
      return request.auth != null
        && get(/databases/$(database)/documents/administradores/$(request.auth.uid)).exists()
        && get(/databases/$(database)/documents/administradores/$(request.auth.uid)).data.rol == 'admin';
    }

    // Colección de alumnos
    match /alumnos/{alumnoId} {
      // Permitir creación durante el registro (cuando el UID coincide)
      allow create: if request.auth != null
                    && request.auth.uid == alumnoId;

      // Permitir lectura de su propio documento
      allow read: if request.auth != null
                  && request.auth.uid == alumnoId;

      // Permitir actualización de su propio documento
      allow update: if request.auth != null
                    && request.auth.uid == alumnoId;

      // Permitir eliminación solo a admins
      allow delete: if isAdmin();
    }

    // Colección de administradores: acceso restringido a admins
    match /administradores/{adminId} {
      // Solo administradores pueden leer/crear/actualizar/eliminar documentos en esta colección
      allow read, write: if isAdmin();
    }

    // Colección de solicitudes
    match /solicitudes/{solicitudId} {
      // Permitir lectura a usuarios autenticados
      allow read: if request.auth != null;

      // Permitir creación a usuarios autenticados y que el uidAlumno coincida
      allow create: if request.auth != null
                    && request.resource.data.uidAlumno == request.auth.uid;

      // Permitir actualización solo si eres el dueño o admin
      allow update: if request.auth != null
                    && (resource.data.uidAlumno == request.auth.uid || isAdmin());

      // Permitir eliminación solo a admins
      allow delete: if isAdmin();
    }

    // Por defecto denegar el resto
    match /{document=**} {
      allow read: if false;
      allow write: if false;
    }
  }
}

───────────────────────────────────────────────────────────────
REGLAS MÁS SIMPLES (SOLO PARA PRUEBAS):
───────────────────────────────────────────────────────────────

Si sigues teniendo problemas, puedes usar estas reglas más permisivas
SOLO PARA PRUEBAS (no para producción):

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read, write: if request.auth != null;
    }
  }
}

───────────────────────────────────────────────────────────────
DESPUÉS DE CAMBIAR LAS REGLAS:
───────────────────────────────────────────────────────────────

1. Click en "Publicar" (Publish)
2. Espera unos segundos a que se apliquen los cambios
3. Recarga tu aplicación web
4. Intenta registrar y enviar una solicitud nuevamente

═══════════════════════════════════════════════════════════════
VERIFICAR SI FUNCIONÓ:
═══════════════════════════════════════════════════════════════

1. Abre tu aplicación web
2. Abre la Consola del Navegador (F12)
3. Ve a la pestaña "Console"
4. Intenta enviar una solicitud
5. Deberías ver mensajes como:
   - "Enviando solicitud: {...}"
   - "Solicitud guardada con ID: abc123"

Si ves errores tipo "permission-denied" o "Missing or insufficient permissions",
las reglas aún no están configuradas correctamente.

═══════════════════════════════════════════════════════════════
CAMBIOS REALIZADOS EN EL CÓDIGO:
═══════════════════════════════════════════════════════════════

✅ Removido orderBy() que requería índices compuestos
✅ Agregado ordenamiento en el cliente (JavaScript)
✅ Agregado manejo de errores mejorado con console.log
✅ Agregado timestamp adicional para mejor ordenamiento
✅ Deshabilitación del botón de envío para evitar duplicados
✅ Cambio automático a pestaña de historial después de enviar

═══════════════════════════════════════════════════════════════
